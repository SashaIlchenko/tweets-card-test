{"version":3,"file":"static/js/843.14016bb1.chunk.js","mappings":"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","sources":["API.jsx","Components/UserItem/UserItem.styled.jsx","Components/UserItem/UserItem.jsx","Components/UsersList/UserList.styled.jsx","Components/UsersList/UsersList.jsx","Pages/Tweets/Tweets.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://64422c0676540ce22585d104.mockapi.io/users';\nconst limitPerPage = 3;\nexport async function getAllUsers() {\n    const response = await axios.get(`${BASE_URL}`);\n    return response.data;\n}\nexport async function getUsers(page = 1) {\n    const response = await axios.get(`${BASE_URL}?page=${page}&limit=${limitPerPage}`);\n    return response.data;\n}\n\nexport async function updateUsers(id, followers) {\n    const response = await axios.put(`${BASE_URL}/${id}`, {\n        followers,\n    })\n    return response.data;\n}\n\n","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\nposition: relative;\npadding-bottom:36px;\nwidth: 380px;\nlist-style: none;\nbackground-image: linear-gradient(to right, #471CA9\n0%, #5736A3 69%, #4B2A99 100%);\n box-shadow: -3px 7px 21px 0 rgba(0, 0, 0, 0.23);\n border-radius: 21px;`\n\n\nexport const Wrapper = styled.div`\nmargin-bottom: 62px;\npadding: 20px;\nborder-bottom: 8px solid #EBD8FF;\nwidth:340px;\nbox-shadow: 0 3px 3px 0 rgba(0, 0, 0, 0.25),\ninset 0 3px 3px 0 rgba(251, 248, 255, 0.06),\ninset 0 -2px 3px 0 rgba(174, 123, 227, 0.25);\n `\n\nexport const Avatar = styled.img`\nposition: absolute;\n    top: 190px;\n    left: 135px;\nwidth:80px;\nheight:80px;\nborder-radius:50%;\nborder:8px solid #EBD8FF;\nbox-shadow: 0 3px 3px 0 rgba(0, 0, 0, 0.25),\ninset 0 3px 3px 0 rgba(251, 248, 255, 0.06),\ninset 0 -2px 3px 0 rgba(174, 123, 227, 0.25); \n`\nexport const TweetsInfo = styled.p`\nmargin-bottom:16px;\ntext-align: center;\ntext-transform: uppercase;\nfont-size: 20px;\nline-height:1.2;\ncolor:#EBD8FF;\n`\n\nexport const FollowingBtn = styled.button`\nmargin-bottom: 10px;\nwidth: 196px;\nmargin-left: auto;\nmargin-right: auto;\ncolor: #373737;\nbackground-color: #EBD8FF;\nborder-radius: 10.31px;\n &.active {\n    background-color: #5CD3A8;\n  }\n`\n","import { useEffect, useState } from \"react\";\nimport { updateUsers } from '../../API';\nimport logo from '../../images/Logo.png';\nimport backgroundImg from '../../images/BackgroundImg.png'\nimport { Item, Wrapper, Avatar, TweetsInfo, FollowingBtn } from './UserItem.styled'\nexport const UserItem = ({ user }) => {\n    const { avatar, tweets, followers, id } = user;\n    const [userFollowers, setUserFollowers] = useState(followers);\n    const [follow, setFollow] = useState(false);\n    const handleFollowClick = async () => {\n        if (!follow) {\n            const increment = followers + 1;\n            try {\n                await updateUsers(id, increment);\n                setUserFollowers(increment);\n                setFollow(true);\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await updateUsers(id, followers);\n                setUserFollowers(followers);\n                setFollow(false);\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    };\n    useEffect(() => {\n        const localeFollow = localStorage.getItem(`follow${id}`);\n        if (localeFollow !== null) {\n            const parsedFollow = JSON.parse(localeFollow);\n            setFollow(parsedFollow.follow);\n            setUserFollowers(parsedFollow.userFollowers);\n        } else {\n            setUserFollowers(followers);\n        }\n    }, [id, followers]);\n    useEffect(() => {\n        const followArray = { id, follow, userFollowers };\n        localStorage.setItem(`follow${id}`, JSON.stringify(followArray));\n\n    }, [id, follow, userFollowers]);\n    const NormilizedFollowers = () => {\n        const NumberArr = userFollowers.toString().split('');\n        if (NumberArr.length === 5) {\n            return NumberArr.toSpliced(2, 0, ',');\n        } else if (NumberArr.length > 5) {\n            return NumberArr.toSpliced(3, 0, ',');\n        }\n        return NumberArr.toSpliced(1, 0, ',');\n    }\n    return (<Item>\n        <Wrapper>\n            <img src={logo} alt=\"logo\" />\n            <img src={backgroundImg} alt=\"img\" width='308' />\n        </Wrapper>\n        < Avatar src={avatar} alt={user} />\n        <TweetsInfo>{tweets} Tweets</TweetsInfo>\n        <TweetsInfo>{NormilizedFollowers()} Followers</TweetsInfo>\n        {follow ? <FollowingBtn className='active' type=\"button\" onClick={() => handleFollowClick(id, followers)}>Following</FollowingBtn> :\n            <FollowingBtn type=\"button\" onClick={() => handleFollowClick(id, followers)}>Follow </FollowingBtn>}\n    </Item>\n    )\n}\n\n","import styled from \"@emotion/styled\";\n\nexport const TweetsList = styled.ul`\nmargin-top: 50px;\ndisplay: flex;\nflex-wrap: wrap;\ngap: 48px;`\n\nexport const LoadBtn = styled.button`\nwidth: 196px;\nmargin-top: 50px;\nmargin-left: auto;\nmargin-right: auto;\ncolor: #373737;\nbackground-color: #EBD8FF;\nborder-radius: 10.31px;\n`\nexport const AllBtn = styled.button`\nposition:absolute;\ntop: 74px;\nleft: 124px;\nwidth: 196px;\ncolor: #373737;\nbackground-color: #EBD8FF;\nborder-radius: 10.31px;\n &:hover {\nbackground-color: #5CD3A8;\n}`\n","import { useEffect, useState } from \"react\";\nimport { getUsers } from \"../../API\";\nimport { UserItem } from '../UserItem/UserItem';\nimport { getAllUsers } from \"../../API\";\n\nimport {\n    TweetsList,\n    LoadBtn,\n    AllBtn\n} from \"./UserList.styled\";\nimport { toast, Toaster } from \"react-hot-toast\";\n\n\nexport const UserList = () => {\n    const [users, setUsers] = useState([]);\n    const [page, setPage] = useState(1);\n    const [isLoading, setIsloading] = useState(false);\n    useEffect(() => {\n        async function getDataUsers() {\n            try {\n                const data = await getUsers(page);\n                if (data.length) {\n                    setUsers(prev => [...prev, ...data]);\n                    setIsloading(true);\n                } else {\n                    toast.error('Oops!No more tweets yet');\n                    setIsloading(false);\n                }\n            } catch (error) {\n                console.log(error);\n                setIsloading(false);\n            }\n        };\n        getDataUsers();\n    }, [page]);\n    const handleAllClick = () => {\n        async function getDataAllUsers() {\n            try {\n                const data = await getAllUsers();\n                setUsers([...data]);\n                setIsloading(false);\n\n            } catch (error) {\n                console.log(error);\n            }\n\n        }\n        getDataAllUsers()\n    }\n    const handleBtnClick = () => {\n        setPage(per => per + 1);\n    }\n    return (\n        <>\n            <AllBtn type='button' onClick={handleAllClick}>Show All</AllBtn>\n            <Toaster />\n            {<TweetsList >\n                {users.map(user => (\n                    <UserItem key={user.id} user={user} />\n                ))}\n            </TweetsList >\n            }\n            {isLoading && <LoadBtn type='button' onClick={handleBtnClick}>Load more</LoadBtn>}\n        </>\n    );\n};\n\n","\nimport { useLocation } from \"react-router-dom\";\nimport { UserList } from \"../../Components/UsersList/UsersList\";\nimport { Link } from \"../../Components/Layout/Layout.styled\";\nconst Tweets = () => {\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n    return (<div><Link to={backLinkHref}>Back</Link>\n        <UserList />\n    </div>\n    )\n}\nexport default Tweets;"],"names":["BASE_URL","getAllUsers","axios","response","data","getUsers","page","updateUsers","id","followers","Item","styled","Wrapper","Avatar","TweetsInfo","FollowingBtn","UserItem","user","avatar","tweets","useState","userFollowers","setUserFollowers","follow","setFollow","handleFollowClick","increment","console","log","useEffect","localeFollow","localStorage","getItem","parsedFollow","JSON","parse","followArray","setItem","stringify","src","alt","backgroundImg","width","NumberArr","toString","split","length","toSpliced","NormilizedFollowers","className","type","onClick","TweetsList","LoadBtn","AllBtn","UserList","users","setUsers","setPage","isLoading","setIsloading","prev","toast","getDataUsers","getDataAllUsers","map","per","backLinkHref","useLocation","state","from","to"],"sourceRoot":""}